to create local repo , use git init
by default when we create fole it will be a part of working directory,
we need to let git know that this is a part of git and it goes to staging area

git status - shows file on branch or untracked files

to delete .git, use rm .git or go to folder and delete .git folder

to set bracnh to main instead of master , 
use git init -b main (here -b stands for branch)

if we want to add a file to staging area, we need to
use git add <filename>

to see all the commits on the branch, we need to use git log

We need to commit, we need to use git commit -m "<add msg here>
once this is done, the file will be tracked by git for changes

git creates checksum for every commit, it is created using 40 characters
out of it we only focus on 1st 7 characters
e.g [main (root-commit) 5936ab3] My first commit.

after editing a file in local, if we do git status it will show changes not staged for commit
becase we have not added files for staging yet, we need to go git add, then git commit

git log will show the author and date of commits

if we want to skip staging we can add -a to commit
eg. git commit -a -m "<messager her>"

git diff - finding differences in what we have worked and what is already there in commits

if we add the file to staging area and then do git diff, it will not show anything
git diff --staged - to see diff in staging area